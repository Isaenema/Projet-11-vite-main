swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get User Transactions
      description: API for fetching all user transactions for the current month, grouped by account
      produces:
        - application/json
      responses:
        "200":
          description: User transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/TransactionDetails"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /user/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get Transaction Details
      description: API for fetching details of a specific transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction to retrieve details for
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction details retrieved successfully
          schema:
            $ref: "#/definitions/TransactionDetails"
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
  /user/transactions/{transactionId}/notes:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get Transaction Notes
      description: API for fetching notes related to a specific transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction to retrieve notes for
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction notes retrieved successfully
          schema:
            $ref: "#/definitions/TransactionNotes"
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Add Transaction Note
      description: API for adding a note related to a specific transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction to add a note for
          required: true
          type: string
        - in: body
          name: body
          description: Note content
          required: true
          schema:
            $ref: "#/definitions/TransactionNote"
      produces:
        - application/json
      responses:
        "200":
          description: Note added successfully
          schema:
            $ref: "#/definitions/TransactionNotes"
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
  /user/transactions/{transactionId}/notes/{noteId}:
    delete:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Delete Transaction Note
      description: API for deleting a note related to a specific transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction to delete the note for
          required: true
          type: string
        - in: path
          name: noteId
          description: ID of the note to delete
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Note deleted successfully
          schema:
            $ref: "#/definitions/TransactionNotes"
        "401":
          description: Unauthorized
        "404":
          description: Note not found
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  TransactionDetails:
    type: object
    properties:
      transactions:
        type: array
        items:
          $ref: "#/definitions/Transaction"
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Transaction ID
      accountId:
        type: string
        description: Account ID associated with the transaction
      amount:
        type: number
        description: Transaction amount
      description:
        type: string
        description: Description of the transaction
      date:
        type: string
        format: date
        description: Date of the transaction
  TransactionNotes:
    type: object
    properties:
      notes:
        type: array
        items:
          $ref: "#/definitions/Note"
  Note:
    type: object
    properties:
      id:
        type: string
        description: Note ID
      content:
        type: string
        description: Note content
  TransactionNote:
    type: object
    properties:
      content:
        type: string
        description: Note content
